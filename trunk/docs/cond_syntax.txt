	 * Check conditions specified in an authItem
	 * 
	 * Conditions are separated by && or ||
	 * Conditions are evaluated left to right and && has lower precedence than || 
	 * unless the very first condition begins with ||
	 * && -> and
	 * || -> or
	 * 
	 * For example:
	 * cond1 && cond2 || cond3 && cond4    is evaluated like:  cond1 && ( cond2 || cond3 ) && cond4
	 * ||cond1 && cond2 || cond3 && cond4    is evaluated like:  (cond1 && cond2) || (cond3 && cond4)
	 * 
	 * Each condition begins with an identifier followed by an operator which may or maynot have space(s) 
	 * adjoining it, followed by a string which may contain spaces or it might be a numeric value.
	 * 
	 * Conditions may not contain the semi-colon (;)
	 * 
	 * So a condition is one of the following forms
	 * key op value		// equiv to expr: $_REQUEST[key] op value
	 * key &op key2		// equir to expr: $_REQUEST[key] op $_REQUEST[key2]
	 * 
	 * Where key is an associative index in the $_REQUEST array or in the supplied array $condParams.
	 * 
	 * Operators: ( value in cond [op] value in _REQUEST or $condParams. )
	 * ==	Check for equality. Uses PHP == operator.
	 * !=	Inequality
	 * <	Less than
	 * >	Greater than
	 * <=	Less than or equal
	 * >=	Greater than or equal
	 * >>	condition value contained in
	 * <<	condition value contains
	 * ~>>	Like >> but uses regex
	 * ~<<	Like << but uses regex
	 * !	does not exist
	 * .	exists
	 * &==	both sides are keys (in the same array) and their values should be equal
	 * &!=	both sides are keys and their values should be inequal
	 * &<, &>, &<=, &>=, &>>, &<<, &~>>, &~>>		Like previous two
	 * 

	 
	 EXAMPLES:
	 1. Say you want to specify moderator forum 29 
	 
	 		forum==29
	 
	    This equiv to ->  $_REQUEST['forum'] == '29'
	    
	 2. 